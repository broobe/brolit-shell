version: '3.1'

services:

    mysql:
        image: 'mariadb:10.6'
        container_name: ${PROJECT_NAME}_mysql
        restart: always
        command: --max_allowed_packet=256M
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - ${MYSQL_DATA_DIR}:/var/lib/mysql
        networks:
            - internal

    webserver:
        image: 'nginx:alpine'
        container_name: ${PROJECT_NAME}_nginx
        restart: always
        security_opt:
            - no-new-privileges:true
        working_dir: /wordpress
        volumes:
            - ${WWW_DATA_DIR}:/wordpress
            - ./php-${PHP_VERSION}_docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - '${WP_PORT}:80'
        networks:
            - internal

    php-fpm:
        build: php-${PHP_VERSION}_docker/php-fpm
        container_name: ${PROJECT_NAME}_php-fpm
        restart: always
        working_dir: /wordpress
        volumes:
            - ${WWW_DATA_DIR}:/wordpress
            - ./php-${PHP_VERSION}_docker/php-fpm/php-ini-overrides.ini:/etc/php/${PHP_VERSION}/fpm/conf.d/99-overrides.ini
        #    - ./php-${PHP_VERSION}_docker/php-fpm/www.conf-overrides:/etc/php/${PHP_VERSION}/fpm/pool.d/z-optimised.conf
        networks:
            - internal
            
    wordpress-cli:
        container_name: ${PROJECT_NAME}_wpcli
        depends_on:
            - mysql
            - webserver
        image: wordpress:cli
        working_dir: /wordpress
        user: xfs # This is required to run wordpress-cli with the same user-id as wordpress. 
        volumes:
            - ${WWW_DATA_DIR}:/wordpress
        networks:
            - internal    

    redis:
        image: 'redis:6.0-alpine'
        container_name: ${PROJECT_NAME}_redis
        restart: unless-stopped
        volumes:
            - ${REDIS_DATA}:/data
        networks:
            - internal

#    phpmyadmin:
#        image: phpmyadmin/phpmyadmin
#        container_name: ${PROJECT_NAME}_phpmyadmin
#        restart: always
#        ports:
#            - ${PHPMYADMIN_PORT}:80
#        hostname: ${PHPMYADMIN_DOMAIN}
#        environment:
#            PMA_HOST: mysql
#        networks:
#            - internal
#
#    server:
#        container_name: ${PROJECT_NAME}_ssh
#        build:
#            context: ./ssh_docker
#            args:
#                SSH_MASTER_USER: ${SSH_MASTER_USER}
#                SSH_MASTER_PASS: ${SSH_MASTER_PASS}
#        restart: always
#        hostname: ${PROJECT_DOMAIN}
#        working_dir: /home/${SSH_MASTER_USER}/application
#        volumes:
#            - ${WWW_DATA_DIR}:/home/${SSH_MASTER_USER}/application
#        ports:
#            - "${SSH_HOST_PORT}:22"
#        networks:
#            - internal

networks:
  internal:
    name: ${PROJECT_NAME}_network
    driver: bridge